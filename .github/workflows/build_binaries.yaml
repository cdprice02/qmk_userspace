name: Build QMK firmware

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
      - 'latest'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  version:
    name: 'Semantic Version Tag'
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create or bump semantic version tag
        id: tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set tag output
        id: set_tag
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
          else
            TAG="${{ steps.tag.outputs.new_tag }}"
          fi
          echo "new_tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Move 'latest' tag to current commit
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -d latest || true
          git push origin :refs/tags/latest || true
          git tag latest
          git push origin latest --force

  build:
    name: 'QMK Userspace Build'
    uses: qmk/.github/.github/workflows/qmk_userspace_build.yml@main
    with:
      qmk_repo: qmk/qmk_firmware
      qmk_ref: master

  publish_tag:
    name: 'QMK Userspace Publish (tag)'
    uses: qmk/.github/.github/workflows/qmk_userspace_publish.yml@main
    if: |
      (startsWith(github.ref, 'refs/tags/v')) ||
      (github.ref == 'refs/heads/main' && needs.version.outputs.new_tag != '')
    needs: [build, version]
    with:
      release_name: ${{ needs.version.outputs.new_tag }}

  fix_tag_release_title:
    name: 'Fix Tag Release Title'
    runs-on: ubuntu-latest
    needs: [publish_tag, version]
    if: needs.publish_tag.result == 'success'
    steps:
      - name: Fix release title
        run: |
          gh release edit ${{ needs.version.outputs.new_tag }} \
            --repo "${{ github.repository }}" \
            --title "${{ needs.version.outputs.new_tag }}"
          echo "Release title fixed for tag ${{ needs.version.outputs.new_tag }}"
        env:
            GH_TOKEN: ${{ github.token }}

  publish_latest:
    name: 'QMK Userspace Publish (latest)'
    uses: qmk/.github/.github/workflows/qmk_userspace_publish.yml@main
    if: |
      (github.ref == 'refs/heads/main') ||
      (github.ref == 'refs/tags/latest')
    needs: [build, publish_tag]

  fix_latest_release_title:
    name: 'Fix Latest Release Title'
    runs-on: ubuntu-latest
    needs: publish_latest
    if: needs.publish_latest.result == 'success'
    steps:
      - name: Fix release title
        run: |
          gh release edit "latest" \
            --repo "${{ github.repository }}" \
            --title "latest"
          echo "Release title fixed for latest"
        env:
            GH_TOKEN: ${{ github.token }}
